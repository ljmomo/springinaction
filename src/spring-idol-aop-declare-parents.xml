<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd 
		                http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
	">
	
	<!-- 既可以注入bean 也可 自动检测bean和定义bean -->
	<context:component-scan base-package="com.springinaction.springidol">
	 <!--  <context:include-filter type="assignable" expression="com.springinaction.springidol.Performer"/>  -->
<!-- 	  <context:exclude-filter type="annotation" expression="com.springinaction.springidol.StringedInstrument"/>
 -->	</context:component-scan>
  <!-- 使用注解自动注入bean -->	
 <!--  <context:annotation-config/> -->
  
 <!-- 	<bean id="kenny" class="com.springinaction.springidol.Instrumentalist" >
		<property name="song" value="#{systemEnvironment['CLASSPATH']}"></property>
	</bean>
	<bean  class="com.springinaction.springidol.Saxophone" />
	
	<bean class="com.springinaction.springidol.Piano" >
	  <qualifier value="piano"></qualifier>
	</bean>  -->
	
	 <!--default-impl="com.springinaction.springidol.GraciousContestant"  --> 
	<aop:config>
	    <aop:aspect  >
	       <!-- declare-parents 声明了切面所通知的Bean在他的对象层次中拥有新的父类
	        types-matching  为哪一个类型指定
	        implement-interface 那些类实现实现的接口   这里是Contestant接口
	        default-impl 是用全限定类名来来显示指定实现接口的类 ，这里是GraciousContestant
	        delegate-ref 和上面的一样只不过是引用Bean  本身是一个bean 可以被注入，被通知
	        -->
	       <aop:declare-parents 
	        types-matching="com.springinaction.springidol.Performer+" 
	        implement-interface="com.springinaction.springidol.Contestant" 
	        delegate-ref="delegateContestant"
	       />
	     
	    </aop:aspect>
	</aop:config>
 
  
</beans>